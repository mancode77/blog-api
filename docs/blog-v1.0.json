{
    "openapi": "3.0.2",
    "info": {
        "title": "Blog",
        "description": "OpenAPI for Blog RESTful API",
        "version": "1.0",
        "contact": {
            "name": "Aji Maulana",
            "email": "mancode700@gmail.com",
            "url": "https://mancode77.github.io"
        },
        "license": {
            "name": "APACHE 2.0",
            "url": "https://www.apache.org/licenses/LICENSES-2.0"
        }
    },
    "servers": [
        {
            "url": "https://{environment}.blog-api.herokuapp.com/api",
            "description": "Blog RESTful API",
            "variables": {
                "environment": {
                    "default": "dev",
                    "description": "Server Environment",
                    "enum": [
                        "dev",
                        "prod"
                    ]
                }
            }
        }
    ],
    "externalDocs": {
        "description": "GitHub Aji Maulana",
        "url": "https://github.com/mancode77/indovel-api"
    },
    "paths": {
        "/articles": {
            "get": {
                "tags": [
                    "articles"
                ],
                "summary": "Get all articles",
                "description": "Get all articles by default",
                "parameters": [
                    {
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": true
                        },
                        "in": "query",
                        "required": false,
                        "description": "Number of articles you want to display",
                        "examples": {
                            "limit": {
                                "description": "Example limit 10",
                                "value": 10
                            }
                        }
                    },
                    {
                        "name": "skip",
                        "schema": {
                            "type": "integer",
                            "default": true
                        },
                        "in": "query",
                        "required": false,
                        "description": "Number of articles not shown",
                        "examples": {
                            "skip": {
                                "description": "Example skip 10",
                                "value": 10
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all article success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "author": {
                                                "type": "string"
                                            },
                                            "content": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "description": "Example success get all article",
                                        "value": [
                                            {
                                                "took": "200",
                                                "status": "OK",
                                                "data": {
                                                    "id": 1,
                                                    "category": "Programming",
                                                    "title": "Javascript",
                                                    "author": "Joan",
                                                    "content": "JavaScript adalah bahasa pemrograman tingkat tinggi dan dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer, Mozilla Firefox, Netscape dan Opera. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag SCRIPT."
                                                },
                                                "error": null
                                            },
                                            {
                                                "took": "200",
                                                "status": "OK",
                                                "data": {
                                                    "id": 2,
                                                    "category": "Programming",
                                                    "title": "Java",
                                                    "author": "Lambert",
                                                    "content": "Java adalah bahasa pemrograman yang dapat dijalankan di berbagai komputer termasuk telepon genggam. Bahasa ini awalnya dibuat oleh James Gosling saat masih bergabung di Sun Microsystems, yang saat ini merupakan bagian dari Oracle dan dirilis tahun 1995."
                                                },
                                                "error": null
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "requestNotFound": {
                                        "description": "Example request not found",
                                        "value": {
                                            "took": 400,
                                            "status": "NOT FOUND",
                                            "data": null,
                                            "error": {
                                                "message": "404 NOT FOUND"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "serverError": {
                                        "description": "Example server error",
                                        "took": 500,
                                        "status": "Server Error",
                                        "data": null,
                                        "error": {
                                            "message": "500 Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "summary": "Create new article",
                "description": "Create new article to database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "required": true,
                                        "minLength": 5,
                                        "maxLength": 50
                                    },
                                    "author": {
                                        "type": "string",
                                        "required": true,
                                        "maxLength": 45
                                    },
                                    "content": {
                                        "type": "string",
                                        "required": true,
                                        "maxLength": 50000
                                    }
                                }
                            },
                            "examples": {
                                "javascript": {
                                    "description": "Example create article javascript",
                                    "value": {
                                        "category": "Programming",
                                        "title": "Javascript",
                                        "author": "Joan",
                                        "content": "JavaScript adalah bahasa pemrograman tingkat tinggi dan dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer, Mozilla Firefox, Netscape dan Opera. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag SCRIPT."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post, create article success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "author": {
                                                "type": "string"
                                            },
                                            "content": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "javascript": {
                                        "description": "Example create article javascript",
                                        "value": {
                                            "took": "200",
                                            "status": "OK",
                                            "data": {
                                                "id": 1,
                                                "category": "Programming",
                                                "title": "Javascript",
                                                "author": "Joan",
                                                "content": "JavaScript adalah bahasa pemrograman tingkat tinggi dan dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer, Mozilla Firefox, Netscape dan Opera. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag SCRIPT."
                                            },
                                            "error": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "requestNotFound": {
                                        "description": "Example request not found",
                                        "value": {
                                            "took": 400,
                                            "status": "NOT FOUND",
                                            "data": null,
                                            "error": {
                                                "message": "404 NOT FOUND"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "serverError": {
                                        "description": "Example server error",
                                        "value": {
                                            "took": 500,
                                            "status": "SERVER ERROR",
                                            "data": null,
                                            "error": {
                                                "message": "505 SERVER ERROR"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articles/{articleId}": {
            "delete": {
                "tags": [
                    "articles"
                ],
                "summary": "Delete existing article",
                "description": "Delete existing article to database",
                "parameters": [
                    {
                        "name": "articleId",
                        "schema": {
                            "type": "integer",
                            "default": false,
                            "nullable": false
                        },
                        "in": "path",
                        "required": true,
                        "description": "Article id for deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success delete article",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "description": "Example success delete article",
                                        "value": {
                                            "took": 200,
                                            "status": "OK",
                                            "data": {
                                                "message": "Delete article success"
                                            },
                                            "error": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "requestNotFound": {
                                        "description": "Example request not found",
                                        "value": {
                                            "took": 400,
                                            "status": "NOT FOUND",
                                            "data": null,
                                            "error": {
                                                "message": "404 NOT FOUND"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "serverError": {
                                        "description": "Example server error",
                                        "value": {
                                            "took": 500,
                                            "status": "NOT FOUND",
                                            "data": null,
                                            "error": {
                                                "message": "505 NOT FOUND"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "summary": "Update existing article",
                "description": "Update existing article to database",
                "parameters": [
                    {
                        "name": "articleId",
                        "schema": {
                            "type": "integer",
                            "default": false,
                            "nullable": false
                        },
                        "in": "path",
                        "required": true,
                        "description": "artcileId id for updated"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "required": true,
                                        "minLength": 5,
                                        "maxLength": 50
                                    },
                                    "author": {
                                        "type": "string",
                                        "required": true,
                                        "maxLength": 45
                                    },
                                    "content": {
                                        "type": "string",
                                        "required": true,
                                        "maxLength": 50000
                                    }
                                }
                            },
                            "examples": {
                                "java": {
                                    "description": "Example update article java",
                                    "value": {
                                        "category": "Programming",
                                        "title": "Java",
                                        "author": "Lambert",
                                        "content": "Java adalah bahasa pemrograman yang dapat dijalankan di berbagai komputer termasuk telepon genggam. Bahasa ini awalnya dibuat oleh James Gosling saat masih bergabung di Sun Microsystems, yang saat ini merupakan bagian dari Oracle dan dirilis tahun 1995."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update article success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "author": {
                                                "type": "string"
                                            },
                                            "content": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "java": {
                                        "description": "Example update article java",
                                        "value": {
                                            "took": 200,
                                            "status": "OK",
                                            "data": {
                                                "id": 2,
                                                "category": "Programming",
                                                "title": "Java",
                                                "author": "Lambert",
                                                "content": "Java adalah bahasa pemrograman yang dapat dijalankan di berbagai komputer termasuk telepon genggam. Bahasa ini awalnya dibuat oleh James Gosling saat masih bergabung di Sun Microsystems, yang saat ini merupakan bagian dari Oracle dan dirilis tahun 1995."
                                            },
                                            "error": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "requestNotFound": {
                                        "description": "Example request not found",
                                        "value": {
                                            "took": 400,
                                            "status": "NOT FOUND",
                                            "data": null,
                                            "error": {
                                                "message": "404 NOT FOUND"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "serverError": {
                                        "description": "Example server error",
                                        "value": {
                                            "took": 500,
                                            "status": "SERVER ERROR",
                                            "data": null,
                                            "error": {
                                                "message": "500 SERVER ERROR"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "createOrUpdateBlog": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "required": true,
                        "minLength": 5,
                        "maxLength": 50
                    },
                    "author": {
                        "type": "string",
                        "required": true,
                        "maxLength": 45
                    },
                    "content": {
                        "type": "string",
                        "required": true,
                        "maxLength": 50000
                    }
                }
            }
        },
        "parameters": {
            "articleId": {
                "name": "articleId",
                "schema": {
                    "type": "integer",
                    "default": false,
                    "nullable": false
                },
                "in": "path",
                "required": true,
                "description": "Article id for deleted"
            }
        }
    }
}